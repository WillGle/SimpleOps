services:
  gitlab:
    image: gitlab/gitlab-ce:16.8.1-ce.0
    container_name: gitlab
    hostname: gitlab.local
    restart: always
    ports:
      - "8080:80"
      - "443:443"
      - "2222:22"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_data:/var/opt/gitlab
      - gitlab_logs:/var/log/gitlab
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost/-/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  jenkins:
    image: jenkins/jenkins:2.440.1-lts-jdk17
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock # Required for Docker pipelines
    networks:
      - dev-network
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -sf http://localhost:8080/login || exit 1"] 

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions # For plugins
    depends_on:
      - db
    networks:
      - dev-network
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -sf http://localhost:9000/api/system/status || exit 1"]

  db:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev-network
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    #   interval: 15s

  prometheus:
    image: prom/prometheus:v2.50.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./services/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - dev-network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:9090/-/ready"]

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./services/monitoring/loki/config.yml:/etc/loki/config.yml
    networks:
      - dev-network
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -sf http://localhost:3100/ready | grep -q ready"] 

  grafana:
    image: grafana/grafana:10.4.1
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - dev-network
    depends_on:
      - prometheus
      - loki
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -sf http://localhost:3000/api/health || exit 1"]

networks:
  dev-network:
    name: devops-net
    driver: bridge

volumes:
  gitlab_config:
  gitlab_data:
  gitlab_logs:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  postgres_data:
  prometheus_data:
  grafana_data:
  loki_data:
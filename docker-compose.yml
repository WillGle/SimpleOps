version: '3'

services:
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    hostname: gitlab
    restart: always
    ports:
      - "8080:80"
      - "443:443"
      - "2222:22"
    volumes:
      - ./services/gitlab/gitlab_data:/var/opt/gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:8080'
    networks:
      - dev-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - ./services/jenkins/jenkins_home:/var/jenkins_home
    networks:
      - dev-network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    restart: always
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
    volumes:
      - ./services/sonarqube/sonarqube_data:/opt/sonarqube/data
    depends_on:
      - db
    networks:
      - dev-network

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    volumes:
      - ./services/postgres/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dev-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./services/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dev-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - ./services/monitoring/loki/config.yml:/etc/loki/config.yml
    networks:
      - dev-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./services/monitoring/grafana:/var/lib/grafana
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge
